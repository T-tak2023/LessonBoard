name: CICD

on:
  push:
  pull_request:
    types:
      - closed

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and start containers
        run: |
          docker-compose up -d --build
          docker-compose exec -T web sleep 30

      - name: Set up the database
        run: |
          cp config/database.yml.ci config/database.yml
          docker-compose exec -T web bundle exec rails db:create RAILS_ENV=test
          docker-compose exec -T web bundle exec rails db:migrate RAILS_ENV=test

      - name: Run tests
        run: docker-compose exec -T web bundle exec rspec

      - name: Run linters
        run: docker-compose exec -T web bundle exec rubocop

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Public IP Install
        id: ip
        uses: haythem/public-ip@v1.3

      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Add IP to EC2 security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd ~/LessonBoard
            git fetch origin
            echo "Fetching branches from origin..."
            git branch -r  # リモートブランチの確認

            if [[ "${{ github.event_name }}" == "push" ]]; then
                echo "Event name: push"
                echo "Checking out branch: ${GITHUB_REF#refs/heads/}"
                git checkout ${GITHUB_REF#refs/heads/}
                git pull origin ${GITHUB_REF#refs/heads/}
            elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
                echo "Event name: pull_request"
                echo "Checking out base branch: ${{ github.event.pull_request.base.ref }}"
                git checkout ${{ github.event.pull_request.base.ref }}
                git pull origin ${{ github.event.pull_request.base.ref }}
            fi
            echo "Current branch: $(git branch --show-current)"
            docker-compose -f docker-compose.prod.yml up -d --build

      - name: Remove IP from EC2 security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
