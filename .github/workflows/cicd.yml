name: CICD

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start containers
        run: |
          docker-compose up -d --build
          docker-compose exec -T web sleep 30

      - name: Set up the database
        run: |
          cp config/database.yml.ci config/database.yml
          docker-compose exec -T web bundle exec rails db:create RAILS_ENV=test
          docker-compose exec -T web bundle exec rails db:migrate RAILS_ENV=test

      - name: Run tests
        run: docker-compose exec -T web bundle exec rspec

      - name: Run linters
        run: docker-compose exec -T web bundle exec rubocop

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          ssh -t -o StrictHostKeyChecking=no -i private_key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
          set -e  # エラーが発生した場合、スクリプトを終了
          echo "Changing directory to app"
          cd /path/to/your/app || { echo "Failed to cd"; exit 1; }
          echo "Pulling latest code"
          git pull origin HEAD || { echo "Failed to pull code"; exit 1; }
          echo "Starting Docker containers"
          docker-compose -f docker-compose.prod.yml up -d --build || { echo "Failed to start containers"; exit 1; }
        EOF
