name: CICD

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install latest Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and start containers
        run: |
          docker-compose up -d --build
          docker-compose exec -T web sleep 30

      - name: Set up the database
        run: |
          cp config/database.yml.ci config/database.yml
          docker-compose exec -T web bundle exec rails db:create RAILS_ENV=test
          docker-compose exec -T web bundle exec rails db:migrate RAILS_ENV=test

      - name: Run tests
        run: docker-compose exec -T web bundle exec rspec

      - name: Run linters
        run: docker-compose exec -T web bundle exec rubocop

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Get public IP address
        id: ip
        run: echo "::set-output name=value::$(curl -s http://checkip.amazonaws.com)"

      - name: Update security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.value }}/32

      - name: Deploy to EC2
        env:
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # echo "${EC2_SSH_PRIVATE_KEY}" > private_key.pem
          # chmod 600 private_key.pem
          # ssh -t -o StrictHostKeyChecking=no -i private_key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
          # set -e  # エラーが発生した場合、スクリプトを終了
          # echo "Changing directory to app"
          # cd /LessonBoard || { echo "Failed to cd"; exit 1; }
          # echo "Pulling latest code"
          # git pull origin HEAD || { echo "Failed to pull code"; exit 1; }
          # echo "Starting Docker containers"
          # docker-compose -f docker-compose.prod.yml up -d --build || { echo "Failed to start containers"; exit 1; }
          # EOF

         # SSH接続して、git pullする
         echo "${{ EC2_SSH_PRIVATE_KEY }}" > private_key
         chmod 600 private_key
         ssh -oStrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} -i private_key "cd /LessonBoard && git pull origin HEAD"

         # SSHのセキュリティグループを閉じる
         aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
